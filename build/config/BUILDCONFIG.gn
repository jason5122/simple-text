# =============================================================================
# PLATFORM SELECTION
# =============================================================================
if (target_os == "") {
  target_os = host_os
}
if (target_cpu == "") {
  target_cpu = host_cpu
}

if (current_cpu == "") {
  current_cpu = target_cpu
}
if (current_os == "") {
  current_os = target_os
}

# =============================================================================
# BUILD FLAGS
# =============================================================================
declare_args() {
  is_release = false
}

# =============================================================================
# OS DEFINITIONS
# =============================================================================
is_mac = target_os == "mac"
is_linux = target_os == "linux"
is_win = target_os == "win"
is_posix = !is_win

# =============================================================================
# TARGET DEFAULTS
# =============================================================================
default_compiler_configs = [
  "//build/config/compiler:compiler",
  "//build/config/compiler:default_include_dirs",
  "//build/config/compiler:default_optimization",
  "//build/config/compiler:no_exceptions",
  "//build/config/compiler:no_rtti",
  "//build/config/compiler:runtime_library",
  "//build/config/compiler:simple_text_code",
  "//build/config/sanitizers:default_sanitizer_flags",
]

if (is_mac) {
  default_compiler_configs += [ "//build/config/mac:enable_arc" ]
}
if (is_win) {
  default_compiler_configs += [
    "//build/config/win:unicode",
    "//build/config/win:lean_and_mean",
    "//build/config/win:nominmax",
    "//build/config/win:winver",
    "//build/config/win:static_crt",
    "//build/config/win:no_crt_deprecation_warnings",
  ]
}
if (is_release) {
  default_compiler_configs += [ "//build/config:release" ]
}

set_defaults("executable") {
  configs = default_compiler_configs
}
set_defaults("static_library") {
  configs = default_compiler_configs
}
set_defaults("shared_library") {
  configs = default_compiler_configs
}
set_defaults("source_set") {
  configs = default_compiler_configs
}

set_default_toolchain("//build/toolchain/$target_os:clang")
